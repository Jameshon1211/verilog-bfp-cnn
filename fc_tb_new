`timescale 1ns / 1ps

module fc_tb;

  // Inputs
  reg signed [8:0] in0, in1, in2, in3;
  reg signed [8:0] w0, w1, w2, w3, w4, w5, w6, w7, w8, w9;
  reg signed [8:0] w10, w11, w12, w13, w14, w15, w16, w17, w18, w19;
  reg signed [8:0] w20, w21, w22, w23, w24, w25, w26, w27, w28, w29;
  reg signed [8:0] w30, w31, w32, w33, w34, w35, w36, w37, w38, w39;
  reg signed [8:0] b0;
  reg [7:0] iexp, wexp, bexp;

  // Outputs
  wire signed [8:0] out0, out1, out2, out3, out4, out5, out6, out7, out8, out9;
  wire [7:0] oexp;

  // Instantiate the Unit Under Test (UUT)
  fc uut (
    .in0(in0), .in1(in1), .in2(in2), .in3(in3),
    .w0(w0), .w1(w1), .w2(w2), .w3(w3), .w4(w4), .w5(w5), .w6(w6), .w7(w7), .w8(w8), .w9(w9),
    .w10(w10), .w11(w11), .w12(w12), .w13(w13), .w14(w14), .w15(w15), .w16(w16), .w17(w17), .w18(w18), .w19(w19),
    .w20(w20), .w21(w21), .w22(w22), .w23(w23), .w24(w24), .w25(w25), .w26(w26), .w27(w27), .w28(w28), .w29(w29),
    .w30(w30), .w31(w31), .w32(w32), .w33(w33), .w34(w34), .w35(w35), .w36(w36), .w37(w37), .w38(w38), .w39(w39),
    .b0(b0),
    .iexp(iexp), .wexp(wexp), .bexp(bexp),
    .out0(out0), .out1(out1), .out2(out2), .out3(out3), .out4(out4),
    .out5(out5), .out6(out6), .out7(out7), .out8(out8), .out9(out9),
    .oexp(oexp)
  );

  initial begin
    $monitor("At time %0t: oexp=%d, out0=%d, out1=%d, out2=%d, out3=%d",
             $time, oexp, out0, out1, out2, out3);

    // Initialize all inputs to zero
    in0 = 9'b0;
    in1 = 9'b0;
    in2 = 9'b0;
    in3 = 9'b0;

    b0 = 9'b0;

    iexp = 8'd0;
    wexp = 8'd0;
    bexp = 8'd0;

    // Fill all weights with 1.0 (sign=0, mantissa=128)
    w0 = 9'b0_10000000;
    w1 = 9'b0_10000000;
    w2 = 9'b0_10000000;
    w3 = 9'b0_10000000;
    w4 = 9'b0_10000000;
    w5 = 9'b0_10000000;
    w6 = 9'b0_10000000;
    w7 = 9'b0_10000000;
    w8 = 9'b0_10000000;
    w9 = 9'b0_10000000;

    w10 = 9'b0_10000000;
    w11 = 9'b0_10000000;
    w12 = 9'b0_10000000;
    w13 = 9'b0_10000000;
    w14 = 9'b0_10000000;
    w15 = 9'b0_10000000;
    w16 = 9'b0_10000000;
    w17 = 9'b0_10000000;
    w18 = 9'b0_10000000;
    w19 = 9'b0_10000000;

    w20 = 9'b0_10000000;
    w21 = 9'b0_10000000;
    w22 = 9'b0_10000000;
    w23 = 9'b0_10000000;
    w24 = 9'b0_10000000;
    w25 = 9'b0_10000000;
    w26 = 9'b0_10000000;
    w27 = 9'b0_10000000;
    w28 = 9'b0_10000000;
    w29 = 9'b0_10000000;

    w30 = 9'b0_10000000;
    w31 = 9'b0_10000000;
    w32 = 9'b0_10000000;
    w33 = 9'b0_10000000;
    w34 = 9'b0_10000000;
    w35 = 9'b0_10000000;
    w36 = 9'b0_10000000;
    w37 = 9'b0_10000000;
    w38 = 9'b0_10000000;
    w39 = 9'b0_10000000;

    b0 = 9'b0_10000000; // Bias = 1.0

    iexp = 8'd127; // Input exponent (IEEE-754 bias)
    wexp = 8'd127; // Weight exponent
    bexp = 8'd127; // Bias exponent

    // Test Case 1: All inputs = 1.0
    #10 in0 = 9'b0_10000000; // +1.0
    in1 = 9'b0_10000000;
    in2 = 9'b0_10000000;
    in3 = 9'b0_10000000;

    #10 $display("Test Case 1: All inputs = 1.0, all weights = 1.0");

    // Test Case 2: Input = 2.0
    #10 in0 = 9'b0_10000001; // +2.0
    in1 = 9'b0_10000001;
    in2 = 9'b0_10000001;
    in3 = 9'b0_10000001;

    #10 $display("Test Case 2: All inputs = 2.0, all weights = 1.0");

    // Test Case 3: Negative input
    #10 in0 = 9'b1_10000000; // -1.0
    in1 = 9'b1_10000000;
    in2 = 9'b1_10000000;
    in3 = 9'b1_10000000;

    #10 $display("Test Case 3: All inputs = -1.0, all weights = 1.0");

    // Test Case 4: Zero input
    #10 in0 = 9'b0_00000000; // 0.0
    in1 = 9'b0_00000000;
    in2 = 9'b0_00000000;
    in3 = 9'b0_00000000;

    #10 $display("Test Case 4: All inputs = 0.0");

    #10 $finish;
  end

endmodule
