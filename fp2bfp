module bfp (
  input wire [31:0] fp0, fp1, fp2, fp3, fp4, fp5, fp6, fp7, fp8,
  input wire [7:0] maxexp0,
  output wire [8:0] bfp0, bfp1, bfp2, bfp3, bfp4, bfp5, bfp6, bfp7, bfp8,
  output wire [7:0] maxexp1
);
  //wire fp0_sign, fp1_sign, fp2_sign, fp3_sign, fp4_sign, fp5_sign, fp6_sign, fp7_sign, fp8_sign;
  wire [8:0] bfp0_mant, bfp1_mant, bfp2_mant, bfp3_mant, bfp4_mant, bfp5_mant, bfp6_mant, bfp7_mant, bfp8_mant;
  assign bfp0_mant = {1'b1, fp0[22:15]};
  assign bfp1_mant = {1'b1, fp1[22:15]};
  assign bfp2_mant = {1'b1, fp2[22:15]};
  assign bfp3_mant = {1'b1, fp3[22:15]};
  assign bfp4_mant = {1'b1, fp4[22:15]};
  assign bfp5_mant = {1'b1, fp5[22:15]};
  assign bfp6_mant = {1'b1, fp6[22:15]};
  assign bfp7_mant = {1'b1, fp7[22:15]};
  assign bfp8_mant = {1'b1, fp8[22:15]};

  wire [7:0] rsb0, rsb1, rsb2, rsb3, rsb4, rsb5, rsb6, rsb7, rsb8;
  wire [8:0] bfp0_mant_mod, bfp1_mant_mod, bfp2_mant_mod, bfp3_mant_mod, bfp4_mant_mod, bfp5_mant_mod, bfp6_mant_mod, bfp7_mant_mod, bfp8_mant_mod;
  
  assign rsb0 = maxexp0 - fp0[30:23];
  assign rsb1 = maxexp0 - fp1[30:23];
  assign rsb2 = maxexp0 - fp2[30:23];
  assign rsb3 = maxexp0 - fp3[30:23];
  assign rsb4 = maxexp0 - fp4[30:23];
  assign rsb5 = maxexp0 - fp5[30:23];
  assign rsb6 = maxexp0 - fp6[30:23];
  assign rsb7 = maxexp0 - fp7[30:23];
  assign rsb8 = maxexp0 - fp8[30:23];

  assign bfp0_mant_mod = (bfp0_mant >> rsb0) + 1'b1;
  assign bfp1_mant_mod = (bfp1_mant >> rsb1) + 1'b1;
  assign bfp2_mant_mod = (bfp2_mant >> rsb2) + 1'b1;
  assign bfp3_mant_mod = (bfp3_mant >> rsb3) + 1'b1;
  assign bfp4_mant_mod = (bfp4_mant >> rsb4) + 1'b1;
  assign bfp5_mant_mod = (bfp5_mant >> rsb5) + 1'b1;
  assign bfp6_mant_mod = (bfp6_mant >> rsb6) + 1'b1;
  assign bfp7_mant_mod = (bfp7_mant >> rsb7) + 1'b1;
  assign bfp8_mant_mod = (bfp8_mant >> rsb8) + 1'b1;
  //assign bfp0_mant_mod = bfp0_mant >> rsb0;
  //assign bfp1_mant_mod = bfp1_mant >> rsb1;
  //assign bfp2_mant_mod = bfp2_mant >> rsb2;
  //assign bfp3_mant_mod = bfp3_mant >> rsb3;
  //assign bfp4_mant_mod = bfp4_mant >> rsb4;
  //assign bfp5_mant_mod = bfp5_mant >> rsb5;
  //assign bfp6_mant_mod = bfp6_mant >> rsb6;
  //assign bfp7_mant_mod = bfp7_mant >> rsb7;
  //assign bfp8_mant_mod = bfp8_mant >> rsb8;

  //round to positive infinity
  //assign bfp0_mant_mod = (fp0[31] == 0) ? (bfp0_mant >> rsb0) + 1'b1 : bfp0_mant >> rsb0;
  //assign bfp1_mant_mod = (fp1[31] == 0) ? (bfp1_mant >> rsb1) + 1'b1 : bfp1_mant >> rsb0;
  //assign bfp2_mant_mod = (fp2[31] == 0) ? (bfp2_mant >> rsb2) + 1'b1 : bfp2_mant >> rsb0;
  //assign bfp3_mant_mod = (fp3[31] == 0) ? (bfp3_mant >> rsb3) + 1'b1 : bfp3_mant >> rsb0;
  //assign bfp4_mant_mod = (fp4[31] == 0) ? (bfp4_mant >> rsb4) + 1'b1 : bfp4_mant >> rsb0;
  //assign bfp5_mant_mod = (fp5[31] == 0) ? (bfp5_mant >> rsb5) + 1'b1 : bfp5_mant >> rsb0;
  //assign bfp6_mant_mod = (fp6[31] == 0) ? (bfp6_mant >> rsb6) + 1'b1 : bfp6_mant >> rsb0;
  //assign bfp7_mant_mod = (fp7[31] == 0) ? (bfp7_mant >> rsb7) + 1'b1 : bfp7_mant >> rsb0;
  //assign bfp8_mant_mod = (fp8[31] == 0) ? (bfp8_mant >> rsb8) + 1'b1 : bfp8_mant >> rsb0;

  //round to negative infinity
  //assign bfp0_mant_mod = (fp0[31] == 1) ? (bfp0_mant >> rsb0) + 1'b1 : bfp0_mant >> rsb0;
  //assign bfp1_mant_mod = (fp1[31] == 1) ? (bfp1_mant >> rsb1) + 1'b1 : bfp1_mant >> rsb0;
  //assign bfp2_mant_mod = (fp2[31] == 1) ? (bfp2_mant >> rsb2) + 1'b1 : bfp2_mant >> rsb0;
  //assign bfp3_mant_mod = (fp3[31] == 1) ? (bfp3_mant >> rsb3) + 1'b1 : bfp3_mant >> rsb0;
  //assign bfp4_mant_mod = (fp4[31] == 1) ? (bfp4_mant >> rsb4) + 1'b1 : bfp4_mant >> rsb0;
  //assign bfp5_mant_mod = (fp5[31] == 1) ? (bfp5_mant >> rsb5) + 1'b1 : bfp5_mant >> rsb0;
  //assign bfp6_mant_mod = (fp6[31] == 1) ? (bfp6_mant >> rsb6) + 1'b1 : bfp6_mant >> rsb0;
  //assign bfp7_mant_mod = (fp7[31] == 1) ? (bfp7_mant >> rsb7) + 1'b1 : bfp7_mant >> rsb0;
  //assign bfp8_mant_mod = (fp8[31] == 1) ? (bfp8_mant >> rsb8) + 1'b1 : bfp8_mant >> rsb0;
  
  assign bfp0 = {fp0[31], bfp0_mant_mod[8:1]};
  assign bfp1 = {fp1[31], bfp1_mant_mod[8:1]};
  assign bfp2 = {fp2[31], bfp2_mant_mod[8:1]};
  assign bfp3 = {fp3[31], bfp3_mant_mod[8:1]};
  assign bfp4 = {fp4[31], bfp4_mant_mod[8:1]};
  assign bfp5 = {fp5[31], bfp5_mant_mod[8:1]};
  assign bfp6 = {fp6[31], bfp6_mant_mod[8:1]};
  assign bfp7 = {fp7[31], bfp7_mant_mod[8:1]};
  assign bfp8 = {fp8[31], bfp8_mant_mod[8:1]};
  assign maxexp1 = maxexp0;
endmodule
