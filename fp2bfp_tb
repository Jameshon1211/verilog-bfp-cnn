`timescale 1ns/1ps

module bfp_tb;

  // Inputs
  reg [31:0] fp0, fp1, fp2, fp3, fp4, fp5, fp6, fp7, fp8;
  reg [7:0] maxexp0;
  // Outputs
  wire [8:0] bfp0, bfp1, bfp2, bfp3, bfp4, bfp5, bfp6, bfp7, bfp8;
  wire [7:0] maxexp1;

  // Instantiate the BFP module
  bfp uut (
    .fp0(fp0),
    .fp1(fp1),
    .fp2(fp2),
    .fp3(fp3),
    .fp4(fp4),
    .fp5(fp5),
    .fp6(fp6),
    .fp7(fp7),
    .fp8(fp8),
    .maxexp0(maxexp0),
    .bfp0(bfp0),
    .bfp1(bfp1),
    .bfp2(bfp2),
    .bfp3(bfp3),
    .bfp4(bfp4),
    .bfp5(bfp5),
    .bfp6(bfp6),
    .bfp7(bfp7),
    .bfp8(bfp8),
    .maxexp1(maxexp1)
  );


  initial begin
    $dumpfile("dump.vcd");
    $dumpvars(0, bfp_tb);
	maxexp0 = 8'b10000011;
    // Test Case 1: Increasing exponents
    fp0 = 32'h40000000;  // 2.0
    fp1 = 32'h40800000;  // 4.0
    fp2 = 32'h41000000;  // 8.0
    fp3 = 32'h41800000;  // 16.0
    fp4 = 32'hC0000000;  //-2.0
    fp5 = 32'hC1000000;  // -8.0
    fp6 = 32'h3F000000;  // 0.5
    fp7 = 32'h3E800000;  // 0.25
    fp8 = 32'h3DCCCCCC;  // ~0.1
    #10;
    $display("Test Case:");
    $display("maxexp = %8b", maxexp1);
    $display("bfp0 = %9b", bfp0);
    $display("bfp1 = %9b", bfp1);
    $display("bfp2 = %9b", bfp2);
    $display("bfp3 = %9b", bfp3);
    $display("bfp4 = %9b", bfp4);
    $display("bfp5 = %9b", bfp5);
    $display("bfp6 = %9b", bfp6);
    $display("bfp7 = %9b", bfp7);
    $display("bfp8 = %9b", bfp8);
    $display("");
    #10;
    $finish;
  end

endmodule
